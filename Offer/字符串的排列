题目描述
输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。
输入描述:
输入一个字符串,长度不超过9(可能有字符重复),字符只包括大小写字母。


import java.util.ArrayList;
import java.util.*;
public class Solution {
    public ArrayList<String> Permutation(String str) {
        
        ArrayList<String> ans = new ArrayList<String>();
        if(str == null || str.length() == 0){
            return ans; 
        }
        
        TreeSet<String> set = new TreeSet<String>();  //把所有的结果都保存在set中，是因为不要重复的
        char[] CharArrayStr = str.toCharArray();
        PermutationRecu(CharArrayStr, set, 0);       //递归
        ans.addAll(set);
        
        return ans;
    }
    public void PermutationRecu(char[] CharArrayStr, TreeSet<String> set, int start){
        if(start == CharArrayStr.length){              //递归的结果条件就是每个位置都确定完了，已经生成一个排列
            set.add(String.valueOf(CharArrayStr));
            return;
        }
        for(int i = start; i < CharArrayStr.length; i++){ ////依次交换当前以及后面的字符，从当前位置开始
            swap(CharArrayStr, i, start);
            PermutationRecu(CharArrayStr, set, start + 1);//依次交换当前以及后面的字符，从当前位置开始
            swap(CharArrayStr, i, start);   //因为当前和一个位置交换以后，还要和其它位置交换，所以要交换回来
        } 
    }
    public void swap(char[] CharArrayStr, int i, int j){
        char temp = CharArrayStr[i];
        CharArrayStr[i] = CharArrayStr[j];
        CharArrayStr[j] = temp;
    }
}



解题思路： 先确定一个位置的数字，然后分别与其他位置的数字交换。递归解决






