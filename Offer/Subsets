78. Subsets
Given a set of distinct integers, nums, return all possible subsets.

Note:

Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
 For example,

If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

public static List<List<Integer>> subsets(int[] nums) {

        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        ans.add(temp);
        if(nums == null || nums.length == 0){
            return ans;
        }
        Arrays.sort(nums);

        for(int i = 1; i <= nums.length; i++){
            temp.clear();
            dfs(nums,0, i, temp, ans);   //0 记录index i记录往temp放进去的个数
        }
        return ans;
    }
    private static void dfs(int[] nums, int start, int number, List<Integer> temp, List<List<Integer>> ans) {

        if(temp.size() == number){
            ans.add(new ArrayList<>(temp));
            return;
        }
        for(int i = start; i < nums.length; i++){
            temp.add(nums[i]);
            dfs(nums, i+1, number, temp, ans);
            temp.remove(temp.size() - 1);
        }
    }
