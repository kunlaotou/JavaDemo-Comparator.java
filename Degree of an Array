package Test;
import java.util.*;

public class Test {
    public static int findShortestSubArray(int[] nums) {

        int ans = nums.length;
        Map<Integer, Integer> count = new HashMap();
        Map<Integer, Integer> left = new HashMap();
        Map<Integer, Integer> right = new HashMap();

        for(int i = 0; i < nums.length; i++){
            if(!left.containsKey(nums[i])){
                left.put(nums[i], i);
            }
            right.put(nums[i], i);
            count.put(nums[i], count.getOrDefault(nums[i],0) + 1);
        }
        int degree = Collections.max(count.values());
        for(Map.Entry<Integer, Integer> map : count.entrySet()){      //同时遍历，也可以  for(int x  ：count.ketSet)) 或者keyVale
            if(degree == map.getValue()){
                ans = Math.min(ans, right.get(map.getKey()) - left.get(map.getKey()) + 1);
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        int[] a = new int[]{1};
        int[] b = new int[]{2,2,2,2,2,2,2};
        System.out.println(Test.findShortestSubArray(a));
    }
}
